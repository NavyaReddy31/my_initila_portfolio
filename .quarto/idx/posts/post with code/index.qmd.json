{"title":"Data framing with R","markdown":{"yaml":{"title":"Data framing with R","author":"Navya reddy","date":"2023-12-08","categories":["news","code","analysis","plotly","plot"],"image":"b.jpg"},"headingText":"Load necessary libraries","containsRefs":false,"markdown":"\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(caret)\nlibrary(randomForest)\nlibrary(rpart)\nlibrary(e1071) \nlibrary(kknn) \n\n# Function to calculate RMSE\ncalculate_rmse <- function(predictions, actuals) {\n  sqrt(mean((predictions - actuals)^2))\n}\n\n# Generate random data\nset.seed(123)\nx <- rnorm(100)\ny <- 2 * x + rnorm(100)\n\n# Combine data into a data frame\ndata <- data.frame(x = x, y = y)\n\n# Support Vector Machine (SVM)\nsvm_model <- svm(y ~ x, data = data)\n\n# k-Nearest Neighbors (k-NN)\nknn_model <- kknn(y ~ x, train = data, test = data, k = 3)\n\n# Display the first few rows of the dataset\nhead(data)\n\n# Summary statistics\nsummary(data)\n\n# Scatter plot of X and Y\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"blue\") +\n  labs(title = \"Scatter Plot of X vs Y\",\n       x = \"X\",\n       y = \"Y\") +\n  theme_minimal()\n\n# Linear Regression\nlm_model <- lm(y ~ x, data = data)\n\n# Decision Tree\ndt_model <- rpart(y ~ x, data = data)\n\n# Random Forest\nrf_model <- randomForest(y ~ x, data = data)\n\n# Model Evaluation\n# Make predictions\nlm_predictions <- predict(lm_model, newdata = data)\ndt_predictions <- predict(dt_model, newdata = data)\nrf_predictions <- predict(rf_model, newdata = data)\n\n# Evaluate models\nlm_rmse <- calculate_rmse(lm_predictions, data$y)\ndt_rmse <- calculate_rmse(dt_predictions, data$y)\nrf_rmse <- calculate_rmse(rf_predictions, data$y)\n\n# Print model evaluation results\ncat(\"Linear Regression Model:\\n\")\ncat(\"RMSE:\", lm_rmse, \"\\n\\n\")\n\ncat(\"Decision Tree Model:\\n\")\ncat(\"RMSE:\", dt_rmse, \"\\n\\n\")\n\ncat(\"Random Forest Model:\\n\")\ncat(\"RMSE:\", rf_rmse, \"\\n\\n\")\n\n# Plot the data and regression lines for all models\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"blue\") +\n  geom_abline(intercept = coef(lm_model)[1], slope = coef(lm_model)[2], color = \"red\", linetype = \"dashed\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(dt_model, newdata = data.frame(x = sort(data$x)))), color = \"green\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(rf_model, newdata = data.frame(x = sort(data$x)))), color = \"purple\", size = 1) +\n  labs(title = \"Linear Regression, Decision Tree, and Random Forest Models\",\n       x = \"X\",\n       y = \"Y\") +\n  theme_minimal()\n\n# Support Vector Machine (SVM)\nsvm_model <- svm(y ~ x, data = data)\n\n# k-Nearest Neighbors (k-NN)\nknn_model <- kknn(y ~ x, train = data, test = data, k = 3)\n\n# Make predictions for SVM and k-NN\nsvm_predictions <- predict(svm_model, newdata = data)\n# k-Nearest Neighbors (k-NN)\nknn_model <- kknn(y ~ x, train = data, test = data, k = 3)\n\n# Extract predicted values from the k-NN model\nknn_predictions <- as.vector(knn_model$fitted.values)\n\n# Evaluate k-NN model\nknn_rmse <- calculate_rmse(knn_predictions, data$y)\n\n# Print k-NN model evaluation results\ncat(\"k-Nearest Neighbors (k-NN) Model:\\n\")\ncat(\"RMSE:\", knn_rmse, \"\\n\\n\")\n\n\n# Evaluate SVM and k-NN models\nsvm_rmse <- calculate_rmse(svm_predictions, data$y)\nknn_rmse <- calculate_rmse(knn_predictions, data$y)\n\n# Print additional model evaluation results\ncat(\"Support Vector Machine (SVM) Model:\\n\")\ncat(\"RMSE:\", svm_rmse, \"\\n\\n\")\n\ncat(\"k-Nearest Neighbors (k-NN) Model:\\n\")\ncat(\"RMSE:\", knn_rmse, \"\\n\\n\")\n\n# Plot the data and regression lines for all models\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"blue\") +\n  geom_abline(intercept = coef(lm_model)[1], slope = coef(lm_model)[2], color = \"red\", linetype = \"dashed\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(dt_model, newdata = data.frame(x = sort(data$x)))), color = \"green\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(rf_model, newdata = data.frame(x = sort(data$x)))), color = \"purple\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = svm_predictions[order(data$x)]), color = \"orange\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = knn_predictions[order(data$x)]), color = \"brown\", size = 1) +\n  labs(title = \"Multiple Regression Models Comparison\",\n       x = \"X\",\n       y = \"Y\") +\n  theme_minimal()\n```\n\n***The R code generates a synthetic dataset with a linear relationship between variables 'X' and 'Y.' It implements and evaluates regression models, including Linear Regression, Decision Tree, Random Forest, Support Vector Machine (SVM), and k-Nearest Neighbors (k-NN), showcasing their predictive performance through Root Mean Squared Error (RMSE) metrics. The code concludes with a visualization comparing model predictions against the original data.***\n\n```{r}\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(caret)\nlibrary(randomForest)\nlibrary(rpart)\nlibrary(e1071) \nlibrary(kknn) \n\n# Generate random data\nset.seed(123)\nx <- rnorm(100)\ny <- 2 * x + rnorm(100)\n\n# Combine data into a data frame\ndata <- data.frame(x = x, y = y)\n\n# Exploratory Data Analysis (EDA)\n# (Remaining EDA code remains the same)\n\n# Support Vector Machine (SVM)\nsvm_model <- svm(y ~ x, data = data)\n\n# k-Nearest Neighbors (k-NN)\nknn_model <- kknn(y ~ x, train = data, test = data, k = 3)\n\n# Exploratory Data Analysis (EDA)\n\n# Display the first few rows of the dataset\nhead(data)\n\n# Summary statistics\nsummary(data)\n\n# Scatter plot of X and Y\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"blue\") +\n  labs(title = \"Scatter Plot of X vs Y\",\n       x = \"X\",\n       y = \"Y\") +\n  theme_minimal()\n\n# Linear Regression\nlm_model <- lm(y ~ x, data = data)\n\n# Decision Tree\ndt_model <- rpart(y ~ x, data = data)\n\n# Random Forest\nrf_model <- randomForest(y ~ x, data = data)\n\n# Model Evaluation\n# Function to calculate RMSE\ncalculate_rmse <- function(predictions, actuals) {\n  sqrt(mean((predictions - actuals)^2))\n}\n\n# Make predictions\nlm_predictions <- predict(lm_model, newdata = data)\ndt_predictions <- predict(dt_model, newdata = data)\nrf_predictions <- predict(rf_model, newdata = data)\n\n# Evaluate models\nlm_rmse <- calculate_rmse(lm_predictions, data$y)\ndt_rmse <- calculate_rmse(dt_predictions, data$y)\nrf_rmse <- calculate_rmse(rf_predictions, data$y)\n\n# Print model evaluation results\ncat(\"Linear Regression Model:\\n\")\ncat(\"RMSE:\", lm_rmse, \"\\n\\n\")\n\ncat(\"Decision Tree Model:\\n\")\ncat(\"RMSE:\", dt_rmse, \"\\n\\n\")\n\ncat(\"Random Forest Model:\\n\")\ncat(\"RMSE:\", rf_rmse, \"\\n\\n\")\n\n# Plot the data and regression lines for all models\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"blue\") +\n  geom_abline(intercept = coef(lm_model)[1], slope = coef(lm_model)[2], color = \"red\", linetype = \"dashed\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(dt_model, newdata = data.frame(x = sort(data$x)))), color = \"green\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(rf_model, newdata = data.frame(x = sort(data$x)))), color = \"purple\", size = 1) +\n  labs(title = \"Linear Regression, Decision Tree, and Random Forest Models\",\n       x = \"X\",\n       y = \"Y\") +\n  theme_minimal()\n# Support Vector Machine (SVM)\nsvm_model <- svm(y ~ x, data = data)\n\n```\n\n***`The R code performs exploratory data analysis (EDA) on a synthetic dataset and evaluates multiple regression models, including Linear Regression, Decision Tree, and Random Forest. It generates a scatter plot, calculates summary statistics, and assesses model performance using Root Mean Squared Error (RMSE), presenting a visual comparison of model predictions against the original data.`***\n","srcMarkdownNoYaml":"\n\n```{r}\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(caret)\nlibrary(randomForest)\nlibrary(rpart)\nlibrary(e1071) \nlibrary(kknn) \n\n# Function to calculate RMSE\ncalculate_rmse <- function(predictions, actuals) {\n  sqrt(mean((predictions - actuals)^2))\n}\n\n# Generate random data\nset.seed(123)\nx <- rnorm(100)\ny <- 2 * x + rnorm(100)\n\n# Combine data into a data frame\ndata <- data.frame(x = x, y = y)\n\n# Support Vector Machine (SVM)\nsvm_model <- svm(y ~ x, data = data)\n\n# k-Nearest Neighbors (k-NN)\nknn_model <- kknn(y ~ x, train = data, test = data, k = 3)\n\n# Display the first few rows of the dataset\nhead(data)\n\n# Summary statistics\nsummary(data)\n\n# Scatter plot of X and Y\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"blue\") +\n  labs(title = \"Scatter Plot of X vs Y\",\n       x = \"X\",\n       y = \"Y\") +\n  theme_minimal()\n\n# Linear Regression\nlm_model <- lm(y ~ x, data = data)\n\n# Decision Tree\ndt_model <- rpart(y ~ x, data = data)\n\n# Random Forest\nrf_model <- randomForest(y ~ x, data = data)\n\n# Model Evaluation\n# Make predictions\nlm_predictions <- predict(lm_model, newdata = data)\ndt_predictions <- predict(dt_model, newdata = data)\nrf_predictions <- predict(rf_model, newdata = data)\n\n# Evaluate models\nlm_rmse <- calculate_rmse(lm_predictions, data$y)\ndt_rmse <- calculate_rmse(dt_predictions, data$y)\nrf_rmse <- calculate_rmse(rf_predictions, data$y)\n\n# Print model evaluation results\ncat(\"Linear Regression Model:\\n\")\ncat(\"RMSE:\", lm_rmse, \"\\n\\n\")\n\ncat(\"Decision Tree Model:\\n\")\ncat(\"RMSE:\", dt_rmse, \"\\n\\n\")\n\ncat(\"Random Forest Model:\\n\")\ncat(\"RMSE:\", rf_rmse, \"\\n\\n\")\n\n# Plot the data and regression lines for all models\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"blue\") +\n  geom_abline(intercept = coef(lm_model)[1], slope = coef(lm_model)[2], color = \"red\", linetype = \"dashed\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(dt_model, newdata = data.frame(x = sort(data$x)))), color = \"green\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(rf_model, newdata = data.frame(x = sort(data$x)))), color = \"purple\", size = 1) +\n  labs(title = \"Linear Regression, Decision Tree, and Random Forest Models\",\n       x = \"X\",\n       y = \"Y\") +\n  theme_minimal()\n\n# Support Vector Machine (SVM)\nsvm_model <- svm(y ~ x, data = data)\n\n# k-Nearest Neighbors (k-NN)\nknn_model <- kknn(y ~ x, train = data, test = data, k = 3)\n\n# Make predictions for SVM and k-NN\nsvm_predictions <- predict(svm_model, newdata = data)\n# k-Nearest Neighbors (k-NN)\nknn_model <- kknn(y ~ x, train = data, test = data, k = 3)\n\n# Extract predicted values from the k-NN model\nknn_predictions <- as.vector(knn_model$fitted.values)\n\n# Evaluate k-NN model\nknn_rmse <- calculate_rmse(knn_predictions, data$y)\n\n# Print k-NN model evaluation results\ncat(\"k-Nearest Neighbors (k-NN) Model:\\n\")\ncat(\"RMSE:\", knn_rmse, \"\\n\\n\")\n\n\n# Evaluate SVM and k-NN models\nsvm_rmse <- calculate_rmse(svm_predictions, data$y)\nknn_rmse <- calculate_rmse(knn_predictions, data$y)\n\n# Print additional model evaluation results\ncat(\"Support Vector Machine (SVM) Model:\\n\")\ncat(\"RMSE:\", svm_rmse, \"\\n\\n\")\n\ncat(\"k-Nearest Neighbors (k-NN) Model:\\n\")\ncat(\"RMSE:\", knn_rmse, \"\\n\\n\")\n\n# Plot the data and regression lines for all models\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"blue\") +\n  geom_abline(intercept = coef(lm_model)[1], slope = coef(lm_model)[2], color = \"red\", linetype = \"dashed\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(dt_model, newdata = data.frame(x = sort(data$x)))), color = \"green\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(rf_model, newdata = data.frame(x = sort(data$x)))), color = \"purple\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = svm_predictions[order(data$x)]), color = \"orange\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = knn_predictions[order(data$x)]), color = \"brown\", size = 1) +\n  labs(title = \"Multiple Regression Models Comparison\",\n       x = \"X\",\n       y = \"Y\") +\n  theme_minimal()\n```\n\n***The R code generates a synthetic dataset with a linear relationship between variables 'X' and 'Y.' It implements and evaluates regression models, including Linear Regression, Decision Tree, Random Forest, Support Vector Machine (SVM), and k-Nearest Neighbors (k-NN), showcasing their predictive performance through Root Mean Squared Error (RMSE) metrics. The code concludes with a visualization comparing model predictions against the original data.***\n\n```{r}\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(caret)\nlibrary(randomForest)\nlibrary(rpart)\nlibrary(e1071) \nlibrary(kknn) \n\n# Generate random data\nset.seed(123)\nx <- rnorm(100)\ny <- 2 * x + rnorm(100)\n\n# Combine data into a data frame\ndata <- data.frame(x = x, y = y)\n\n# Exploratory Data Analysis (EDA)\n# (Remaining EDA code remains the same)\n\n# Support Vector Machine (SVM)\nsvm_model <- svm(y ~ x, data = data)\n\n# k-Nearest Neighbors (k-NN)\nknn_model <- kknn(y ~ x, train = data, test = data, k = 3)\n\n# Exploratory Data Analysis (EDA)\n\n# Display the first few rows of the dataset\nhead(data)\n\n# Summary statistics\nsummary(data)\n\n# Scatter plot of X and Y\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"blue\") +\n  labs(title = \"Scatter Plot of X vs Y\",\n       x = \"X\",\n       y = \"Y\") +\n  theme_minimal()\n\n# Linear Regression\nlm_model <- lm(y ~ x, data = data)\n\n# Decision Tree\ndt_model <- rpart(y ~ x, data = data)\n\n# Random Forest\nrf_model <- randomForest(y ~ x, data = data)\n\n# Model Evaluation\n# Function to calculate RMSE\ncalculate_rmse <- function(predictions, actuals) {\n  sqrt(mean((predictions - actuals)^2))\n}\n\n# Make predictions\nlm_predictions <- predict(lm_model, newdata = data)\ndt_predictions <- predict(dt_model, newdata = data)\nrf_predictions <- predict(rf_model, newdata = data)\n\n# Evaluate models\nlm_rmse <- calculate_rmse(lm_predictions, data$y)\ndt_rmse <- calculate_rmse(dt_predictions, data$y)\nrf_rmse <- calculate_rmse(rf_predictions, data$y)\n\n# Print model evaluation results\ncat(\"Linear Regression Model:\\n\")\ncat(\"RMSE:\", lm_rmse, \"\\n\\n\")\n\ncat(\"Decision Tree Model:\\n\")\ncat(\"RMSE:\", dt_rmse, \"\\n\\n\")\n\ncat(\"Random Forest Model:\\n\")\ncat(\"RMSE:\", rf_rmse, \"\\n\\n\")\n\n# Plot the data and regression lines for all models\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"blue\") +\n  geom_abline(intercept = coef(lm_model)[1], slope = coef(lm_model)[2], color = \"red\", linetype = \"dashed\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(dt_model, newdata = data.frame(x = sort(data$x)))), color = \"green\", size = 1) +\n  geom_line(data = data.frame(x = sort(data$x), y = predict(rf_model, newdata = data.frame(x = sort(data$x)))), color = \"purple\", size = 1) +\n  labs(title = \"Linear Regression, Decision Tree, and Random Forest Models\",\n       x = \"X\",\n       y = \"Y\") +\n  theme_minimal()\n# Support Vector Machine (SVM)\nsvm_model <- svm(y ~ x, data = data)\n\n```\n\n***`The R code performs exploratory data analysis (EDA) on a synthetic dataset and evaluates multiple regression models, including Linear Regression, Decision Tree, and Random Forest. It generates a scatter plot, calculates summary statistics, and assesses model performance using Root Mean Squared Error (RMSE), presenting a visual comparison of model predictions against the original data.`***\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"github","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":{"light":"morph","dark":["yeti","../../theme_dark_custom.scss"]},"title-block-banner":true,"title":"Data framing with R","author":"Navya reddy","date":"2023-12-08","categories":["news","code","analysis","plotly","plot"],"image":"b.jpg"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}